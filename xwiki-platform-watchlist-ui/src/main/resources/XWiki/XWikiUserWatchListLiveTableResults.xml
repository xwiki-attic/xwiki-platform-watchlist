<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>XWiki</web>
  <name>XWikiUserWatchListLiveTableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1391621063000</creationDate>
  <parent>XWiki.XWikiUserWatchListSheet</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1391701797000</date>
  <contentUpdateDate>1391701797000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki="false"}}
#if ($xcontext.action == 'get')
##
#macro (getWikiPrettyName $wikiName)
#set ($wikiPrettyName = $services.wiki.getById($wikiName).prettyName)
#if ("$!wikiPrettyName.trim()" != '')$wikiPrettyName#else$wikiName#end
#end
##
#macro (getSpacePrettyName $spaceReference)
#set ($spaceHomePage = $xwiki.getDocument($spaceReference))
#if ($spaceHomePage &amp;&amp; !$spaceHomePage.isNew())${spaceHomePage.plainTitle}#else${spaceReference.name}#end
#end
##
#macro (getPagePrettyName $pageReference)
#set ($pageDocument = $xwiki.getDocument($pageReference))
#if ($pageDocument &amp;&amp; !$pageDocument.isNew())${pageDocument.plainTitle}#else${pageReference.name}#end
#end
##
#macro(addElement $type $wiki $spaceRef $pageRef)
  #if ("$!pageRef" == '')
    #set ($pageName = "$!services.localization.render('watchlist.table.alldocuments')")
    #set ($pageURL = '')
  #else
    #set ($pageName = "#getPagePrettyName($pageRef)")
    #set ($pageURL = "$!xwiki.getURL($pageRef)")
  #end

  #if ("$!spaceRef" == '' &amp;&amp; "$!pageRef" == '')
    #set ($spaceName = "$!services.localization.render('watchlist.table.allspaces')")
    #set ($spaceURL = '')
  #else
    #if ("$!spaceRef" == '')
      #set ($spaceRef = $pageRef.lastSpaceReference)
    #end
    #set ($spaceName = "$!services.model.serialize($spaceRef, 'local')")
    #set ($spaceURL = "$!xwiki.getURL($spaceRef)")
  #end

  #if ("$!wiki" == '')
    #if ("$!spaceRef" == '')
      #set ($wiki = $pageRef.wikiReference.name)
    #else
      #set ($wiki = $spaceRef.wikiReference.name)
    #end
  #end
  #set ($wikiName = "#getWikiPrettyName($wiki)")
  #set ($wikiDescriptor = $services.wiki.getById($wiki))
  #if ($wikiDescriptor)
    #set ($wikiHomeDocRef = $wikiDescriptor.mainPageReference)
    #set ($wikiURL = $xwiki.getURL($wikiHomeDocRef))
  #else
    #set ($wikiURL = '')
  #end

  #if ($type == 'wiki')
    #set ($id = $wiki)
  #elseif ($type == 'space')
    #set ($id = $services.model.serialize($spaceRef, 'default'))
  #elseif ($type == 'document')
    #set ($id = $services.model.serialize($pageRef, 'default'))
  #end

  #set ($discard = $elements.add({
    'id'        : $id,
    'type'      : $type,
    'wikiName'  : $wikiName,
    'wikiUrl'   : $wikiURL,
    'spaceName' : $spaceName,
    'spaceUrl'  : $spaceURL,
    'pageName'  : $pageName,
    'pageUrl'   : $pageURL,
    'deleteUrl' : $doc.getURL('view', "xpage=watch&amp;do=remove${type}&amp;reference=${escapetool.url($id)}")
  }))
#end
##
## Build watched elements list
##
#set ($wikis = $services.watchlist.getWatchedElements("WIKI"))
#set ($spaces = $services.watchlist.getWatchedElements("SPACE"))
#set ($documents = $services.watchlist.getWatchedElements("DOCUMENT"))
#set ($elements = [])
## Wikis
#foreach ($wiki in $wikis)
  #if ("$!wiki" != '')
    #addElement('wiki', $wiki, '', '')
  #end
#end
## Spaces
#foreach ($space in $spaces)
  #if ("$!space" != '')
    #set ($spaceRef = $services.model.resolveSpace($space))
    #addElement('space', '', $spaceRef, '')
  #end
#end
## Documents
#foreach ($document in $documents)
  #if ("$!document" != '')
    #set ($documentRef = $services.model.resolveDocument($document))
    #addElement('document', '', '', $documentRef)
  #end
#end
##
## JSON
##
$jsontool.serialize({
  'totalrows'   : $elements.size(),
  'reqNo'       : $request.reqNo,
  'returnedrows': $elements.size(),
  'offset'      : $request.offset,
  'rows'        : $elements
})
#end
{{/velocity}}</content>
</xwikidoc>
